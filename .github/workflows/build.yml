name: Go CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: cicd
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Test
      run: go test -v ./...

    - name: Docker Login
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: phaelcampos/go-app:latest

  deploy-app:
    runs-on: [self-hosted, linux, x64] 
    environment: cicd
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        
      - name: Login no Docker Registry
        uses: docker/login-action@v3
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Parar e remover container antigo
        run: |
          docker stop meu-container || true
          docker rm meu-container || true

      - name: Baixar imagem mais recente
        run: docker pull phaelcampos/go-app:latest

      - name: Iniciar novo container
        run: |
          docker run -d \
            --name meu-container \
            -p 80:8080 \
            --restart always \
            seu-usuario/sua-imagem:latest # Ou a imagem buildada localmente

